name: Build and deploy

on:
  push:
    branches: "*"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up SSH key
        run: |
          eval "$(ssh-agent -a /tmp/ssh_agent.sock)"
          ssh-add - <<< "${{ secrets.CLOUD9_DEPLOY_KEY }}"

      - name: Build and push to local registry
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        with:
          tags: localhost:5000/cs50/ide:latest
          ssh: default
          build-args: |
            GITHUB_SHA=${{ github.sha }}
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Deploy
        run: |
          # Tag image
          docker tag localhost:5000/cs50/ide:latest cs50/ide:${{ github.sha }}
          docker tag localhost:5000/cs50/ide:latest cs50/ide:latest

          # Upload static assets to CDN
          docker cp "$(docker create cs50/ide:${{ github.sha }})":/opt/c9/packages/cs50/cdn .
          aws s3 cp --recursive cdn/ "s3://mirror.cs50.net/ide/${{ github.sha }}/"

          # Push Docker image
          docker push cs50/ide:${{ github.sha }}
          docker push cs50/ide:latest
        if: ${{ github.ref == 'refs/heads/main' }}
